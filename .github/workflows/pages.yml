name: Publish docs via GitHub Pages

on:
  push:
    branches:
      - main

jobs:

  # Cache job
  cache:
    name: Cache dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Cache Python dependencies
        uses: actions/cache@v2
        id: cache-venv  # name for referring later
        with:
          path: ./.venv/  # what we cache: the virtualenv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Checkout main
        uses: actions/checkout@v3.0.2
      - name: Debug Info
        run: |
          echo "Current Directory: $(pwd)"
          echo "Contents of the Directory:"
          find . -maxdepth 3
      - name: Debug Repository Checkout
        run: |
          echo "Contents of the Repository:"
          find ${{ github.workspace }} -maxdepth 3
      - name: Build Virtualenv
        description: Build a virtualenv, but only if it doesn't already exist
        run: python -m venv ./.venv && . ./.venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit !='true'

  # build job
  build:
    name: Build docs
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout main
        uses: actions/checkout@v3.0.2
      - name: Restore venv from cache
        uses: actions/cache@v2
        with:
          path: ./.venv/  # what we cache: the virtualenv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
      - name: Build Docs
        run: mkdocs gh-deploy

  # Deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
